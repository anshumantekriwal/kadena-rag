[
  {
    "content": "zUSD Stablecoin by Zelcore & eckoDAO\nzUSD mint/burn functionality operates on chain 2.\nzUSD is the standard fungible token contract and can be cross-chained across all 20 Kadena chains for use.\nBe aware of the transaction fees and gas prices on both the Ethereum and Kadena networks.\nThe process of bridging and wrapping tokens may take some time, so be patient for the transactions to complete.\n1/ Stability in Volatile Markets \ud83d\udca1\nzUSD provides a stable medium of exchange and store of value in Kadena's ecosystem, especially crucial during market fluctuations.\nNote: eckoDAO or eckoDEX doesn't exist anymore. Mercatus has taken over. This is an old article!\nThis stability is key for both traders on #eckoDEX and long-term ecosystem investors \ud83e\uddbe\n2/ Enhancing DeFi with Fusion Bridge \ud83c\udf09\nZelcore's Fusion Bridge opens doors to seamless integration with Ethereum - pioneering with USDC.\nThis means more liquidity and interoperability for Kadena without relying on centralized exchanges \ud83d\udd01\n3/ Boosting the Ecosystem \ud83d\udcc8\nHistorically, stablecoins have spurred growth in ecosystems.\n\n- Lending and Borrowing Platforms\n- Yield Farming\n- Staking Platforms:\n- Stablecoin Pools\n- Synthetic Assets and Derivatives\n- Payment Systems\n- Insurance Protocols",
    "source": "miscellaneous",
    "title": "zUSD Stablecoin Information"
  },
  {
    "content": "Developer Documents or Documentation or Docs\nAll documentation, no matter what the topic has to be ALWAYS linked to https://docs.kadena.io!\nIt's never a subdomain!",
    "source": "miscellaneous",
    "title": "Documentation Guidelines"
  },
  {
    "content": "Can you provide a step-by-step guide on how to find information about a specific account (some may call it address or wallet address or k:account)?\nTo track specific accounts on the Kadena blockchain using the official block explorer, you can follow these steps:\n\n1. Visit the official Kadena block explorer at https://explorer.chainweb.com/.\n\n2. Once on the Block Explorer website, look for a search bar or a section where you can enter the account name such as k:c57f0c12a7bcd275413bb0cd30a2a26a2e144364ebae82bcc69eff143fe1d58f. Make sure to select \"Account\" or \"Code\".\n\n3. The block explorer should then display relevant information about the account, including its transactions, history, and other details.",
    "source": "miscellaneous",
    "title": "How to Track Kadena Accounts"
  },
  {
    "content": "Can you provide a step-by-step guide on how to find information about a specific token?\n\nTo track specific tokens on the Kadena blockchain using the official block explorer, you can follow these steps:\n\n1. Visit the official Kadena block explorer at https://explorer.chainweb.com/ or https://tools.kadena.io\n\n2. Once on the Block Explorer website, look for a search bar or a section where you can enter the token's contract address [ask what token contract is needed and provide it]. Make sure to select \"Code\".\n\n3. The block explorer should then display relevant information about the token, including its transactions, history, and other details.",
    "source": "miscellaneous",
    "title": "How to Track Kadena Tokens"
  },
  {
    "content": "What is the smallest unit of the KDA token?\nIt's \"Hop\", named after Grace Hopper, an American computer scientist and computer pioneer. The smallest unit is not \"Kron\". It is \"Hop\", named after Grace Hopper. The smallest unit of KDA is called \"Hop\".",
    "source": "miscellaneous",
    "title": "KDA Smallest Unit - Hop"
  },
  {
    "content": "How does Kadena scale?\nHow do you scale a Proof of Work blockchain? Well, let's start with the classic Computer Science parallelization and work from there.\nIf one Bitcoin blockchain can do 5 transactions per second (using round number approximations for simplicity), two Bitcoin blockchains can do 10 transactions per second, ten blockchains can do 50 tps, etc.\nBut this approach has two major problems:\n\n1. Each of these completely standalone blockchains has a completely different currency. Ten separate currencies...not so great.\n\n2. A 51% attack becomes a 5.1% attack...not good.\n\nKadena's chainweb protocol solves both of these problems by braiding the chains together. For 2 chains, in addition to making each block include the hash of the previous block on the same chain, you also have it include the hash of the previous block on the other chain.\nThis means each #chainweb block in a 2-chain network contains one additional hash--i.e. 256 additional bits of information...not bad! But what benefits do we get in exchange?\nWell, if you wait one block after your transaction, it will require the full hash power of both chains to do a 51% attack on that block. And the hash braiding gives us the merkle tree structure needed to do cross-chain SPV proofs, yielding a single currency across both chains\nSo now we've solved the two major problems described in post #3 of this series, and the cost is only 256 bits (32 bytes) of additional storage per block. But if we scale this up to, say 10 chains, that starts to add up...\nIf each block in a 10-Chainweb contains the hashes of the previous block on all other 9 chains, that's an additional 288 bytes of overhead per block or 2880 bytes per block height--it gets out of hand fast. But there's hope!\nIt turns out there's a brilliant result from an obscure branch of math that can save us and solve the Proof of Work scalability problem! More on this tomorrow...",
    "source": "kadena-info",
    "title": "How Kadena Scales - Chainweb Protocol Introduction"
  },
  {
    "content": "Back in undergrad Computer Science we learned a little bit of this arcane branch of math called graph theory. If you didn't think it was all that interesting, you're in good company. I didn't either. But as it turns out it's just the thing we need to scale blockchains...\nWe saw last time that with two chains where each chain has the hash of the other chain we solve both the multiple currency problem and the 5.1% attack problem. If we visualize the way these two chains are connected, it looks like this.\nWe need to scale this up to hundreds or potentially thousands of chains. But first we need to figure out a strategy for how the chains should be connected together. Let's start with 10 chains and explore a few different strategies.\nThe naive approach would be to have every chain be connected to every other chain. That would look like this. (I'm getting rid of the arrows because they clutter up the image too much. Assume a line means that there's an arrow in each direction.)\nAs we calculated last time this would use way too much space because we have to store an extra 32 bytes for every line attached to a node. It might be doable with 10 chains but it definitely would be too much with more. We need to reduce the number of edges each node has.\nWe could drop down to just two edges for each node. This reduces our storage requirements but it has a different problem. It takes 5 hops to get from any chain to the chain that is farthest away. If we scale this up to 100 chains, that would be 50 hops.\nThis means that with 100 chains you would have to wait 50 blocks before it would require 51% of the whole network hash power to attack that block. Even in blockchains like #ethereum with a relatively fast block time, that's still a long time to wait.\nThat's also how long it would take to transfer coins from one chain to the farthest chain. So we have a dilemma. We want to minimize the number of hops it takes to get to the farthest chain, and we also want to minimize the number of chains each chain is connected to.\nHere's where graph theory saves the day. The number of hops is called the diameter of the graph. And the number of edges each node has is called the degree (assuming they all have the same number which is fine in this case).\nThis is a well known problem in graph theory called the degree diameter problem! And that is the brilliant result that Kadena uses to scale proof of work in what we call the #chainweb protocol. We'll look at the details more closely tomorrow.",
    "source": "kadena-info",
    "title": "Graph Theory and the Degree Diameter Problem"
  },
  {
    "content": "Graph theory researchers have been studying the degree diameter problem for a long time. Optimal solutions are very difficult to find for large graphs. But it turns out that we know how to construct solutions that are quite good.\nHere's the 10-chain graph that Kadena used at launch. If you examine it closely you'll see that every node has three edges (in graph theory parlance, it's degree 3) and you can get from any node to any other node in at most two hops (diameter 2).\nThis means that we only have to store 3 additional hashes per block and after two blocks you can transfer coins from any chain to any other chain and you have to have 51% of the entire network hash power to attack any single chain!\nOn August 20, 2020 the Kadena's network forked from 10 chains to 20 chains. The first 10 chains kept all the same coins and smart contracts that they had before and 20 new chains came into existence. The graph had a new structure though. Here's the 20 chain graph.\nThe 20-chain #chainweb graph still has degree three, but it now has diameter 3, so we have to wait 3 blocks after a transaction before the whole network's hash power is protecting it.\nThe most amazing thing is how much growth potential the degree diameter problem research gives us as we expand beyond 20 chains. Here's a table that shows the largest known graph size for graphs of degree d and diameter k.\nThe above table means that using a chain graph with a degree and diameter of 7 Kadena' blockchain can scale to more than 50,000 chains! And if we increase the degree and diameter one more to 8, we can get well into the hundreds of thousands!!!\nTo recap what we've learned, Kadena's chainweb protocol leverages graph theory research into the degree diameter problem to scale tried and true proof of work #blockchain easily into the realm that we need for the scale of the global financial system.\nAs Vitalik Buterin has pointed out in the past, \"the only solution to high tx fees is scaling\". As we have learned above, Kadena has solved the scaling problem. Join us in building the future of #DeFi!\nOh, and mad props to Will Martino who came up with this idea originally. It's pure genius.",
    "source": "kadena-info",
    "title": "Kadena's Scaling Solution and Future Potential"
  },
  {
    "content": "Blockchain Scalability and Block Production\nAFAIU, the original motivation for pools with #Bitcoin was the fact that the network hash power had grown to the point where if average miners with modest hash power mined solo it would take them too long to win a block. Let's call this the solo/pool threshold.\n\nIf it takes you 6 weeks to win a block on average, that's potentially a problem when it comes to paying your monthly electric bill. Furthermore, since these are all averages it's always possible you could have a streak of bad luck and it would take even longer to win a block.\nThe #Bitcoin network only produces 6 blocks per hour. The Kadena network, on the other hand, currently produces 2400 blocks per hour with its 20 chains and 30 second block time. This is 400x more blocks than Bitcoin.\nIt stands to reason that solo mining on a blockchain that has a block rate 400x higher than Bitcoin would have a solo/pool threshold 400x higher (all else being equal). And that is exactly what we are seeing with Kadena right now.\nMining pools typically pay out their miners once or twice a day. But right now a single mining device on the Kadena network mines anywhere from 1.8 to 19.6 blocks per day, so there's really no reason for miners to use a pool. They'll get more frequent payouts mining solo!\nAs the hash power grows this margin will decrease. But at some point in the future when there is enough transaction volume Kadena will increase the number of chains and that will cause a corresponding decrease in the solo/pool threshold.\nA lower solo/pool threshold makes it possible for a network to be more decentralized because more miners can mine solo while still maintaining steady and predictable income. It also increases the incentive for running a node because you'll need to run a node to mine solo.",
    "source": "kadena-info",
    "title": "Solo Mining vs Pool Mining on Kadena"
  },
  {
    "content": "Cross Chain Transactions on Kadena\nCross-chain transfers on Kadena deserve a more detailed explanation. As I've discussed previously, Kadena scales by using multiple chains connected together. Each chain behaves as a standalone blockchain. This has several ramifications.\n\nNothing can happen on a blockchain without someone sending in a transaction. Smart contracts cannot \"go out to the internet\" to get more data. They can only access what's already on the blockchain and in the transaction itself.\n\nThis means that to do a cross-chain transfer, you have to do two transactions: one to burn the coins on the sending chain, and a second to reconstitute those coins on the target chain. Because of the above criteria, there's no way around this. It's essential complexity.\nThe cross-chain transfer procedure has three distinct steps. First, you initiate the transfer using the transfer-crosschain function.\nAfter the transaction goes through, you have to wait a few blocks (currently no more than 3, the diameter of our current 2-chain graph) for the evidence of the transfer to make its way through the chain graph and become available to the target chain.\nOnce you have waited for those few blocks to go by, you query the blockchain with the transaction hash and it gives you back some data that is the proof that you initiated the cross-chain transfer.\nThen, in the third and final step, you submit that proof in a new transaction to the target chain. This step doesn't have to be done by you. Anyone can do it! And the money will still show up in your account!\nOne consequence of this is that someone has to have coins on the target chain to pay the gas for the transaction to finish the cross-chain transfer. But never fear! Kadena has a gas station for that and a tool available at https://transfer.chainweb.com that can finish it for you.\nAll this may seem annoying but it's absolutely essential for scalability. I anticipate that as Kadena gets more use the ecosystem will develop better and better tools for dealing with these things and that eventually you won't have to think about it.\nUntil then, I think it's a small price to pay in exchange for having a scalable blockchain that eliminates exorbitant gas fees and makes digital currency affordable for the everyman.",
    "source": "kadena-info",
    "title": "Cross-Chain Transactions How They Work"
  },
  {
    "content": "Formal Verification\n\nFormal verification lets us be more confident that a program (in this case #smartcontracts) does what you think it's going to do. Translation, it helps us catch bugs *before* they get out there in the wild.\nIn the world of #cryptocurrencies, bugs can translate directly into people losing money. Since there's no centralized authority you can go to for a refund, being able to prevent bugs before they happen is even more important than in lots of other software.\nSome people might say that you don't need formal verification because you can use tests to prevent bugs in your code. Tests do help prevent bugs but formal verification can do things that tests simply can't do. But how does this actually work?\nFormal verification allows us to prove things about our program **for all possible inputs**. Tests only allow us to say something about our program for one input (or perhaps a few). Let's look at an example...\nThis function calculates the absolute value of a number, but it has a bug. It should never return a negative number, but this devious code does a complicated calculation on the input and if it's equal to one particular value, it returns -1. Otherwise it does the right thing.\nKadena's formal verification does indeed catch it.\nAs several astute people pointed out, there are two values that trigger the bug in this absolute value function: 4839162 and -4839125. Guess what, your test driven development wouldn't have tested these values. At best you might have tested a few hundred or thousand values.\nYou also might argue that this example is so simple it's not actually useful in real development. But when you're dealing with money, a negative sign makes a world of difference. It's the difference between me sending money to you and you sending money to me!\nAnother skeptical argument might be that this code is obviously malicious and not a realistic possibility. But in modern software development programmers run code written by other people all the time. It's totally infeasible to inspect EVERY bit of code you depend on.\nIn this video you can see Kadena's formal verification catch this bug in action. On line 21 we tell Pact that the result of the function should always be >= 0. Seconds after we change the function to return a -1, FV detects this and tells is exactly when it fails.\nAs this example shows, formal verification empowers developers with a level of safety and confidence that conventional software testing methodologies simply cannot match. For users this means fewer bugs and less chance of losing money. The future of DeFi is Kadena!",
    "source": "kadena-info",
    "title": "Formal Verification in Pact Smart Contracts"
  },
  {
    "title": "What is Kadena and what makes it unique?",
    "content": "Kadena is a Layer\u20111 proof\u2011of\u2011work blockchain that uses a braided multi\u2011chain architecture called Chainweb. Instead of relying on a single chain, Kadena runs many blockchains in parallel and braids their hashes together. This allows the network to scale by adding more chains while maintaining security and decentralization. Chainweb\u2019s design makes Kadena both scalable and energy efficient, setting it apart from other PoW blockchains.",
    "source": "miscellaneous"
  },
  {
    "title": "What is Chainweb EVM?",
    "content": "Chainweb\u00a0EVM is Kadena\u2019s Ethereum\u2011compatible execution environment. It provides full EVM support on the Kadena network, allowing developers to deploy Solidity smart contracts on Kadena\u2019s multi\u2011chain architecture. Chainweb\u00a0EVM delivers near\u2011zero gas fees and high throughput, making it attractive for Ethereum developers who want to build on a scalable proof\u2011of\u2011work network.",
    "source": "miscellaneous"
  },
  {
    "title": "How many projects are building on Kadena?",
    "content": "The Kadena Ecosystem site lists more than 100 projects and dApps building on the Kadena network. The goal of the site is to make information about projects building on Kadena easily accessible for developers and the community.",
    "source": "miscellaneous"
  },
  {
    "title": "Where can I trade KDA tokens?",
    "content": "KDA tokens are traded on leading cryptocurrency exchanges such as Binance, Bybit, OKX, Gate.io, KuCoin, Bitget, MEXC and Crypto.com Exchange. These platforms offer trading pairs like KDA/USDT, KDA/BTC and KDA/USD, providing global access and liquidity for the token.",
    "source": "miscellaneous"
  },
  {
    "title": "Who founded Kadena and what is their background?",
    "content": "Kadena was founded in 2016 by Stuart\u00a0Popejoy and Will\u00a0Martino, former leaders of JP\u00a0Morgan\u2019s blockchain group. The broader Kadena team includes professionals with experience at institutions such as JP\u00a0Morgan, the U.S.\u00a0Securities and Exchange Commission, Moody\u2019s and Goldman\u00a0Sachs. This combination of technical and financial expertise underpins Kadena\u2019s mission to deliver an enterprise\u2011ready blockchain.",
    "source": "miscellaneous"
  }
]
